{"version":3,"sources":["components/AddTodo/AddTodo.js","components/Login/Login.js","components/TodoCards/Cards.js","components/TodoCards/TodoCards.js","components/Drawer/Drawer.js","components/LoggedView/MyModal.js","components/LoggedView/LoggedView.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["AddTodo","state","moment","handleDescription","e","setState","target","value","handleDatePicker","date","handleResponsible","handleEmail","handleState","handleSubmit","description","status","responsible","email","dueDate","newItem","toString","props","newTask","history","push","alert","Container","className","variant","Typography","component","TextField","name","label","id","autoComplete","onChange","this","InputLabel","htmlFor","Select","inputProps","required","selected","placeholderText","Fab","color","aria-label","onClick","React","Component","withRouter","Login","handleUsername","handlePassword","preventDefault","handleLogin","localStorage","getItem","username","setItem","removeItem","register","onSubmit","type","Button","Cards","info","icon","localeCompare","Card","CardContent","TodoCards","data","map","card","index","key","MyDrawer","list","anchor","role","toggleDrawer","onKeyDown","List","usuario","open","event","textoMostrar","left","Drawer","onClose","MyModal","handleDueDate","handleStatus","handleOpen","handleClose","Modal","LoggedView","todoData","probando","handleFilter","cleanAllFilter","cards","applyFilter","Register","handlePasswordConfirm","password","confirmPasword","doRegister","App","changeLogin","bool","user","task","arrayTMP","elementRender","IsLogged","Usuario","Switch","Route","exact","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d54c1f3e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AddTodo.css'\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withRouter} from 'react-router-dom';\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from \"moment\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nclass AddTodo extends React.Component{\r\n\r\n    state = {\r\n        \"description\":\"\",\r\n        \"responsible\":\"\",\r\n        \"status\":\"\",\r\n        \"dueDate\":moment(),\r\n        \"email\":\"\"\r\n    }\r\n\r\n    handleDescription = (e) =>{\r\n        this.setState({\r\n            \"description\": e.target.value\r\n        });\r\n    }\r\n\r\n    handleDatePicker = (date) =>{\r\n        this.setState({\r\n            ...this,\r\n            \"dueDate\":date\r\n        });\r\n\r\n    }\r\n\r\n    handleResponsible = (e) =>{\r\n        this.setState({\r\n            \"responsible\": e.target.value\r\n        });\r\n    }\r\n\r\n    handleEmail = (e)=>{\r\n        this.setState({\r\n            \"email\": e.target.value\r\n        });\r\n    }\r\n\r\n    handleState = (e) =>{\r\n        this.setState({\r\n            \"status\":e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const {description,status,responsible,email,dueDate} = this.state;\r\n        if(!description || !status || !responsible || !email || !dueDate){\r\n            alert(\"Debes rellenar todos los datos\")\r\n        } else {\r\n            const newItem = {\r\n                \"description\":description,\r\n                \"status\":status,\r\n                \"responsible\":{\"name\":responsible,\"email\":email},\r\n                \"dueDate\":dueDate.toString()\r\n            }\r\n            this.props.newTask(newItem);\r\n            this.props.history.push(\"/\");\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container className='Box' variant=\"contained\">\r\n                \r\n            \r\n            \r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                New Task\r\n            </Typography>\r\n            <form>\r\n                <TextField name=\"description\" label=\"Description\" id=\"description\" autoComplete=\"description\" onChange={this.handleDescription}/>\r\n                <br/>\r\n                <TextField name=\"responsible\" label=\"Responsible\" id=\"responsible\" autoComplete=\"responsible\" onChange={this.handleResponsible}/>\r\n                <br/>\r\n                <TextField name=\"email\" label=\"Email Responsible\" id=\"email\" autoComplete=\"email\" onChange={this.handleEmail}/>\r\n                <br/>\r\n                <br/>\r\n                <InputLabel htmlFor=\"stateTodo\">Status</InputLabel>\r\n                <Select value={this.state.status} onChange={this.handleState} inputProps={{\r\n            name: 'status',\r\n            id: 'stateTodo',\r\n          }} required>\r\n                    <option value=\"ready\">Ready</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option selected value=\"in progress\">In Progress</option>\r\n                </Select>\r\n                <br/>\r\n                <br/>\r\n                <InputLabel htmlFor=\"due-date\">Date</InputLabel>\r\n                <DatePicker\r\n                        id=\"due-date\"\r\n                        selected={this.state.dueDate}\r\n                        placeholderText=\"Due Date\"\r\n                        onChange={this.handleDatePicker}>\r\n                    </DatePicker>\r\n                <br/>\r\n                <br/>\r\n                <Fab color=\"primary\" aria-label=\"add\" onClick={this.handleSubmit}>\r\n                    <CheckIcon />\r\n                </Fab>\r\n\r\n            </form>\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AddTodo);","import React from 'react'\r\nimport './Login.css'\r\nimport Container from '@material-ui/core/Container';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass Login extends React.Component{\r\n    state = {\r\n        \"username\":\"\",\r\n        \"password\":\"\"\r\n    }\r\n\r\n    handleUsername = (e) =>{\r\n        this.setState({...this,\"username\":e.target.value})\r\n    }\r\n\r\n    handlePassword = (e) =>{\r\n        this.setState({...this,\"password\":e.target.value})\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const {handleLogin} = this.props;\r\n        if(localStorage.getItem(this.state.username)){\r\n            handleLogin(true,this.state.username)\r\n            localStorage.setItem(\"isLogged\",true)\r\n        } else {\r\n            handleLogin(false,null)\r\n            localStorage.removeItem(\"isLogged\")\r\n        }\r\n    }\r\n\r\n    register = (e) => {\r\n        e.preventDefault();\r\n        this.props.history.push(\"/register\");\r\n        \r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Container className='Box' variant=\"contained\">\r\n                \r\n                <LockOutlinedIcon />\r\n                \r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Task Planner\r\n                </Typography>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField name=\"username\" label=\"Username\" id=\"username\" required autoComplete=\"username\" onChange={this.handleUsername}/>\r\n                    <br/>\r\n                    <TextField name=\"password\" label=\"Password\" id=\"password\" type=\"password\" required autoComplete=\"current-password\" onChange={this.handlePassword}/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Sign In </Button>\r\n                    <Button onClick={this.register} variant=\"contained\" color=\"secondary\">Sign Up </Button>\r\n\r\n                </form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './Cards.css'\r\n\r\nclass Cards extends React.Component{\r\n\r\n    render(){\r\n        const {info} = this.props;\r\n        let icon = null;\r\n        if(info.status.localeCompare(\"completed\") === 0){\r\n            icon = <CheckIcon></CheckIcon>\r\n        } else if(info.status.localeCompare(\"ready\") === 0){\r\n            icon = <AlarmOnIcon></AlarmOnIcon>\r\n        } else {\r\n            icon = <AutorenewIcon></AutorenewIcon>\r\n        }\r\n        return(\r\n\r\n            <Card className=\"Root\" variant=\"outlined\">\r\n                <CardContent>\r\n                    <div><Typography variant=\"h5\">{info.description}</Typography>{icon}</div>\r\n                    \r\n                    <Typography variant=\"h5\">{info.status} - {info.dueDate}</Typography>\r\n                    <Typography variant=\"h5\">{info.responsible.name}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;","import React from 'react'\r\nimport Cards from './Cards'\r\n\r\nclass TodoCards extends React.Component{\r\n    \r\n\r\n    render(){\r\n        const {data} = this.props;\r\n        return(\r\n            <div>\r\n                {data.map((card,index)=>{\r\n                    return(\r\n                        <Cards key={index} info={card}></Cards>\r\n                    )\r\n                })}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoCards;","import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport './Drawer.css'\r\nimport { Card,Typography,CardContent } from '@material-ui/core';\r\n\r\nclass MyDrawer extends React.Component{\r\n    state = {\r\n        \"left\":false\r\n    }\r\n\r\n    list = (anchor) => (\r\n        <div\r\n          \r\n          role=\"presentation\"\r\n          onClick={this.toggleDrawer(anchor, false)}\r\n          onKeyDown={this.toggleDrawer(anchor, false)}\r\n        >\r\n          <List>\r\n            <Card>\r\n                <CardContent>\r\n                    <PersonIcon/>\r\n                    <Typography variant=\"h5\">{this.props.usuario}</Typography>\r\n                    <EditIcon/>\r\n                    \r\n                </CardContent>\r\n            </Card>\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n    toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n    \r\n        this.setState({ ...this, [anchor]: open });\r\n      };\r\n\r\n    render(){\r\n        let textoMostrar = this.state.left ? \"Close\" : \"Open\";\r\n        \r\n        return(\r\n            <div className=\"Button\">\r\n                <Button onClick={this.toggleDrawer(\"left\", true)} variant=\"contained\" color=\"primary\">{textoMostrar}</Button>\r\n                <Drawer anchor=\"left\" open={this.state[\"left\"]} onClose={this.toggleDrawer(\"left\",false)}>\r\n                    {this.list(\"left\")}\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MyDrawer;","import React from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from \"moment\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass MyModal extends React.Component{\r\n    state = {\r\n        \"open\":false,\r\n        \"responsible\":\"\",\r\n        \"dueDate\":moment(),\r\n        \"status\":\"\"\r\n    }\r\n\r\n    handleResponsible = (e) =>{\r\n        this.setState({\r\n            \"responsible\":e.target.value\r\n        })\r\n    }\r\n\r\n    handleDueDate = (date) =>{\r\n        this.setState({\r\n            \"dueDate\":date\r\n        })\r\n    }\r\n\r\n    handleStatus = (e) =>{\r\n        this.setState({\r\n            \"status\":e.target.value\r\n        })\r\n    }\r\n\r\n    handleOpen = ()=>{\r\n        this.setState({\r\n            \"open\":true\r\n        })\r\n    }\r\n\r\n    handleClose = () =>{\r\n        this.setState({\r\n            \"open\":false\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleOpen}>Filter</Button>\r\n            <Modal open={this.state.open} onClose={this.handleClose}>\r\n                <Container className='Box' variant=\"contained\">\r\n                \r\n            \r\n            \r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Filters\r\n                </Typography>\r\n                <form>\r\n                \r\n                    <TextField value={this.state.responsible} name=\"responsible\" label=\"Responsible\" id=\"responsible\" autoComplete=\"responsible\" onChange={this.handleResponsible}/>\r\n                    <br/>\r\n                    <br/>\r\n                    <InputLabel htmlFor=\"stateTodo\">Status</InputLabel>\r\n                    <Select value={this.state.status} onChange={this.handleState} inputProps={{\r\n                name: 'status',\r\n                id: 'stateTodo',\r\n              }} required>\r\n                        <option value=\"ready\">Ready</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option selected value=\"in progress\">In Progress</option>\r\n                    </Select>\r\n                    <br/>\r\n                    <br/>\r\n                    <InputLabel htmlFor=\"due-date\">Date</InputLabel>\r\n                    <DatePicker\r\n                            id=\"due-date\"\r\n                            selected={this.state.dueDate}\r\n                            placeholderText=\"Due Date\"\r\n                            onChange={this.handleDatePicker}>\r\n                        </DatePicker>\r\n                    <br/>\r\n                    <br/>\r\n                    <Button color=\"primary\" onClick={this.handleSubmit}>Apply</Button>\r\n                    <br/>\r\n                    <Button color=\"primary\" onClick={this.handleSubmit}>Clear All</Button>\r\n                </form>\r\n            </Container>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyModal;","import React from 'react'\r\nimport TodoCards from '../TodoCards/TodoCards'\r\nimport MyDrawer from '../Drawer/Drawer';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport {withRouter} from 'react-router-dom';\r\nimport MyModal from './MyModal'\r\n\r\nclass LoggedView extends React.Component{\r\n\r\n    state={\r\n        \"cards\":this.props.todoData\r\n    }\r\n\r\n    probando = () =>{\r\n        this.props.history.push(\"/addTodo\")\r\n    }\r\n\r\n    handleFilter = () =>{\r\n        this.cleanAllFilter()\r\n\r\n    }\r\n\r\n    cleanAllFilter = () =>{\r\n        this.setState({\r\n            \"cards\":this.props.todoData\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <MyDrawer usuario={this.props.usuario}></MyDrawer>\r\n                <TodoCards data={this.state.cards}></TodoCards>\r\n                <MyModal applyFilter={this.handleFilter}></MyModal>\r\n                <Fab color=\"primary\" aria-label=\"add\" onClick={this.probando}><AddIcon/></Fab>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LoggedView);\r\n\r\n","import React from 'react'\r\nimport './Register.css'\r\nimport Container from '@material-ui/core/Container';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass Register extends React.Component{\r\n    state = {\r\n        \"username\":\"\",\r\n        \"email\":\"\",\r\n        \"password\":\"\",\r\n        \"confirmPasword\":\"\"\r\n\r\n    }\r\n\r\n    \r\n\r\n    handlePassword = (e) =>{\r\n        this.setState({\r\n            \"password\":e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleUsername = (e) =>{\r\n        this.setState({\r\n            \"username\":e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleEmail = (e) =>{\r\n        this.setState({\r\n            \"email\":e.target.value\r\n        })\r\n    }\r\n\r\n    handlePasswordConfirm = (e) =>{\r\n        this.setState({\r\n            \"confirmPasword\":e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        const {username,password,confirmPasword} = this.state;\r\n        if(!localStorage.getItem(username) && password.localeCompare(confirmPasword)===0){\r\n            localStorage.setItem(username,password)\r\n            this.props.doRegister(true,username)\r\n            this.props.history.push(\"/\")\r\n\r\n        } else {\r\n            alert(\"This user is registered yet or the password is not the same at the confirmation\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Container className='Box' variant=\"contained\">\r\n                \r\n                <LockOutlinedIcon />\r\n                \r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Registration\r\n                </Typography>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField required name=\"username\" label=\"Username\" id=\"username\" autoComplete=\"username\" onChange={this.handleUsername}/>\r\n                    <br/>\r\n                    <TextField required name=\"email\" label=\"Email Responsible\" id=\"email\" autoComplete=\"email\" onChange={this.handleEmail}/>\r\n                    <br/>\r\n                    <TextField required name=\"password\" label=\"Password\" id=\"password\" type=\"password\" autoComplete=\"current-password\" onChange={this.handlePassword}/>\r\n                    <br/>\r\n                    <TextField required name=\"passwordConfirm\" label=\"Password Confirm\" id=\"passwordConfirm\" type=\"password\" autoComplete=\"current-password\" onChange={this.handlePasswordConfirm}/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\r\n                    \r\n\r\n                </form>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(Register);","import React from 'react';\r\nimport AddTodo from './components/AddTodo/AddTodo'\r\nimport './App.css';\r\nimport Login from './components/Login/Login';\r\nimport LoggedView from './components/LoggedView/LoggedView'\r\nimport Register from './components/Register/Register'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    \"Usuario\":null,\r\n    \"IsLogged\":false,\r\n    \"data\":[{\r\n      \"description\": \"some description text \",\r\n      \"responsible\": {\r\n          \"name\": \"Santiago Carrillo\",\r\n          \"email\": \"sancarbar@gmail\"\r\n      },\r\n      \"status\": \"ready\",\r\n      \"dueDate\": 156464645646\r\n  }]\r\n  }\r\n\r\n\r\n  changeLogin = (bool,user) =>{\r\n    this.setState({\r\n      \"Usuario\":user,\r\n      \"IsLogged\":bool\r\n    });\r\n\r\n  }\r\n\r\n  newTask = (task) =>{\r\n    let arrayTMP = this.state.data\r\n    arrayTMP.push(task)\r\n    this.setState({\r\n      \"data\":arrayTMP\r\n    })\r\n    \r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    let elementRender = null;\r\n    if(!this.state.IsLogged){\r\n      elementRender = <Login handleLogin={this.changeLogin}></Login>\r\n    } else {\r\n      elementRender = <LoggedView usuario={this.state.Usuario} todoData={this.state.data}></LoggedView>\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={()=>elementRender}/>\r\n          <Route path=\"/addTodo\">\r\n            <AddTodo newTask={this.newTask}/>\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register doRegister={this.changeLogin}/>\r\n          </Route>\r\n        \r\n        \r\n        </Switch>\r\n        </Router>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('install', () => {\r\n      console.log(\"install!!\");\r\n    });\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}